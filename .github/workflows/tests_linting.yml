# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Linting and Testing

# Event triggered whenever push or pull_request is preformed including all branches
on: [push, pull_request]

jobs:
  Call-linting-workflow:
    uses: ./.github/workflows/linting.yml
  Call-testing-workflow:
    uses: ./.github/workflows/testing.yml
  Call-testing-workflow-again:
    needs: Call-linting-workflow
    uses: ./.github/workflows/testing.yml

#    secrets:
#      DATABASE_TYPE: ${{ secrets.DATABASE_TYPE }}

#  Linting:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.10
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.10"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8
#    - name: Running Flake8 linter
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#  Tests:
#    environment:
#      name: Testing
#    env:
#      DATABASE_TYPE: ${{secrets.DATABASE_TYPE}}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.10"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Test with pytest
#        run: |
#          pytest