name: Build/push to AWS ECR and deploy to AWS Lightsail

# Event triggered whenever a new release is published in GitHub
on:
  release:
    types: [published]

jobs:
  Build-Push-AWS-ECR-DEPLOY-AWS-Lightsail:
    environment:
      name: Production
    env:
      DATABASE_TYPE: ${{secrets.DATABASE_TYPE}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ci_surfspotapi
        IMAGE_TAG: latest
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --build-arg ARG_DATABASE_TYPE=$DATABASE_TYPE --build-arg ARG_DATABASE_NAME=$DATABASE_NAME .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    - name: deploy to aws lightsail container service
      run: |
        aws lightsail create-container-service-deployment \
        --service-name surfspotapi \
        --containers "{
        \"container-ci-surfspotapi\": {
          \"image\": \"720918233027.dkr.ecr.eu-central-1.amazonaws.com/ci_surfspotapi:latest\",
          \"ports\": {
            \"80\": \"HTTP\"
          }
        }
        }" \
              --public-endpoint "{
          \"containerName\": \"container-ci-surfspotapi\",
          \"containerPort\": 80,
          \"healthCheck\": {
            \"path\": \"/\",
            \"intervalSeconds\": 300
          }
        }"      
